{"version":3,"sources":["components/Input.jsx","dfs.js","components/Word.jsx","components/Search.jsx","components/Display.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","useState","input","setInput","className","onSubmit","e","preventDefault","setWord","setWordList","type","value","onChange","target","charAt","length","match","substring","trim","toLowerCase","disabled","disableInput","style","background","cursor","wordAnimations","array","list","animations","dfs","Set","set4","sb","i","has","add","push","delete","process","REACT_APP_KEY","REACT_APP_HOST","Word","id","arr","setArray","currentWord","setCurrentWord","word","useEffect","wordArr","c","search","a","setDisableInput","setShowFirstDefinition","animationSeen","wordSeen","validWords","spinner","document","getElementsByClassName","display","options","method","url","headers","axios","request","res","data","definitions","j","animationWithWord","map","an","v","forEach","spanObject","index","setTimeout","color","prevList","Search","wordList","Display","setShow","show","showFirstDefinition","displayDef","temp","x","onClick","flex","padding","y","definition","App","alignSelf","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39959a9d.chunk.js","sourcesContent":["import React, { useState } from \"react\"\n\nconst Input = (props) => {\n\n    const [input, setInput] = useState('');\n\n    //Update input in textfield\n    const onChangeHandler = (e) => {\n      e.preventDefault();\n     \n      let value = (e.target.value);\n\n      if(!value.charAt(value.length-1).match(/[a-z]/i) && value.length > 0) setInput(input);\n      else setInput(value.substring(0,5).trim().toLowerCase());\n\n    }\n\n    //On submit handler\n    const onSubmitHandler = (e) => {\n      e.preventDefault()\n      props.setWord(input)\n      setInput('');\n      props.setWordList([])\n    }\n\n    return(\n        <div className=\"input_container\">\n            <form className=\"form_container\" onSubmit={onSubmitHandler}>\n                <input className=\"textfield\" type=\"text\" value={input} onChange={onChangeHandler}/>\n                <input className=\"button\" type=\"submit\" value=\"Search\"\n                    disabled={props.disableInput ? \"disabled\" : \"\"}\n                    style={{ \n                        background: props.disableInput? \n                        \"rgb(221, 160, 221, .1)\": \"var(--color-one)\", \n                        cursor: props.disableInput ? 'default': 'pointer'\n                    }}\n                />\n            </form>\n        </div>\n    )\n}\n\nexport default Input","//Gets animations for each substring combination\nexport function wordAnimations(array, list) {\n    const animations = [];\n    var set4 = new Set(); \n    \n    dfs(array, set4, '', list, animations );\n    //list.push(\"\");\n\n    return animations;\n}  \n  \nfunction dfs(array, set4, sb, list, animations){\n\n    if(sb.length === array.length)return;\n\n    for(let i = 0; i < array.length; i++){\n\n        if(set4.has(i))continue;\n        \n        set4.add(i);\n        animations.push([i]);\n\n        sb = sb + array[i];\n        sb = sb.toLowerCase();\n        list.push(sb);\n     \n        dfs(array, set4, sb, list, animations);\n\n        set4.delete(i);\n        list.push(sb);\n        sb = sb.substring(0,sb.length-1);\n        animations.push([i]);\n\n    }\n\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"\nimport { wordAnimations } from \"../dfs\";\n\nconst { REACT_APP_KEY, REACT_APP_HOST } = process.env;\n\nconst Word = (props) => {\n\n    const [arr, setArray] = useState({id:'', arr: []});\n    const [currentWord, setCurrentWord] = useState('');\n\n    var { word, setWordList } = props;\n\n    //based on word length map out span elements\n    useEffect(() => {\n\n      setArray({id:'',arr: []});\n      setCurrentWord('');\n      setWordList([]);\n\n      if(!word) return;\n\n      const wordArr = [];\n\n      for(let c in word) wordArr.push(word.charAt(c));\n      \n      setArray({ id: word, arr: wordArr });\n\n      if(arr.arr.length > 0 && arr.id === word) search();\n        \n    }, [arr.id, word, setWordList, arr.arr.length])\n\n    const search = async () => {\n        props.setDisableInput(true);\n        props.setShowFirstDefinition(false);\n        const list = [];\n        let animations = wordAnimations(props.word, list);\n        let animationSeen = new Set();\n        let wordSeen = new Set();\n\n        const validWords = []\n        let spinner = document.getElementsByClassName(\"spinner\");\n        spinner[0].style.display = \"block\";\n\n        for(let word of list){\n\n          if(!wordSeen.has(word)){\n\n            wordSeen.add(word);\n            \n            if(word.length === 1){\n              validWords.push(null);\n              continue;\n            }\n\n            const options = {\n              method: 'GET',\n              url: `https://wordsapiv1.p.rapidapi.com/words/${word}/definitions`,\n              headers: {\n                'x-rapidapi-key': `${REACT_APP_KEY}`,\n                'x-rapidapi-host': `${REACT_APP_HOST}`\n              }\n            };\n\n            try{\n\n              let res = await axios.request(options);\n              if(res.data.definitions.length > 0) validWords.push(res.data);\n              else validWords.push(null);\n\n            }catch(e) { validWords.push(null) } \n            \n          }else validWords.push(null);\n\n        }\n\n        spinner[0].style.display = \"none\";\n\n        let j = 0;\n        let animationWithWord = animations.map(a => ({an: a, list: list[j], v: validWords[j++]}))   \n        \n        let i = 0;\n        animationWithWord.forEach(a => {\n\n          const spanObject = document.getElementsByClassName(\"letters-arr\");\n          const index = [a.an]\n\n            setTimeout(() => {\n\n                spanObject[index].style.color =  \n                spanObject[index].style.color === \"red\" ? \"black\" : \"red\";\n\n                if(animationSeen.has(index)) animationSeen.delete(index);\n                else{\n                    setCurrentWord(a.list);\n                    animationSeen.add(index);\n                }\n\n                if(a.v){\n                a.v = {\n                    ...a.v,\n                    display: false\n                }\n\n                let setWordList = props.setWordList;\n                setWordList(prevList => [...prevList, a.v]);\n                }\n                \n            }, i * 150 + 150)\n\n          i++;\n\n        })\n\n      setTimeout(() =>  { \n          setCurrentWord(\"\") \n          props.setDisableInput(false);\n          props.setShowFirstDefinition(true);\n        }, i * 150 + 150);\n      \n    }\n\n    return(\n        <div className=\"animation_container\">\n\n          <div className=\"character_container\"\n            style={{display: arr.arr.length > 0 ? \"block\":\"none\"}}>\n           \n            {\n              arr.arr.map((c,i) => (\n                  <span className=\"letters-arr\" \n                    key={c + i}\n                    > {c} </span>\n              )) \n            }\n\n          </div>\n\n          <div className=\"spinner_container\">\n            <span className=\"spinner\">\n\n            </span>\n          </div>\n\n          <div className=\"current_word_container\" style={{display: currentWord ? \"block\":\"none\"}}>\n            { currentWord } \n          </div>\n\n        </div>\n    )\n\n}\n\nexport default Word","import React, { useState } from 'react'\nimport Input from \"./Input\"\nimport Word from \"./Word\"\n\nimport '../Search-style.css';\n\nconst Search = (props) => {\n\n    const [word, setWord] = useState('');\n    const [disableInput, setDisableInput] = useState(false)\n\n    return(\n      <div className=\"input_and_display\">\n        <div className=\"search_input\">\n          <h4 className=\"label\">Enter text</h4>\n          <Input setWord={setWord} setWordList={props.setWordList} \n            disableInput={disableInput}\n          />\n        </div>\n        <div className=\"word_display\">\n          <Word wordList={props.wordList} \n            setWordList={props.setWordList} word={word}\n            setDisableInput={setDisableInput}\n            setShowFirstDefinition={props.setShowFirstDefinition}\n          />\n        </div>\n      </div>\n    )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\n\nconst Display = (props) => {\n\n    const [wordList, setWordList] = useState([]);\n    const [show, setShow] = useState(false)\n\n    useEffect(() => {\n        let list = props.wordList;\n        let show = props.showFirstDefinition\n\n        if(props.showFirstDefinition && list.length > 0 ){\n\n            setTimeout( () => {\n                setShow(true);\n                if(show) displayDef(0);\n                setShow(false);\n            }, 2800)\n            \n        }\n        setWordList(list)\n        \n    \n    }, [props.wordList, wordList.display, props.showFirstDefinition])\n\n    const displayDef = (index) => {\n\n        let temp = wordList;\n\n        for(let i = 0; i < temp.length; i++){\n            if(i === index) temp[index].display = !temp[index].display;\n            else temp[i].display = false;\n        }\n    \n        setWordList([...temp])\n\n    }\n\n    return(\n        <div className=\"list_container\">\n            <div className=\"word_container_item\">\n                {\n                    wordList.map((x,j)=>(\n                        <div key ={x.word} onClick={()=>displayDef(j)} className=\"word_item\">\n                            {x.word}\n                            <div style={{flex: .5, padding: x.display ? \"10px\" : \"0\"}}>\n                                {\n                                    x.definitions.map((y,i) => (\n                                        <div\n                                        key={i}\n                                        className=\"definitions\"\n                                        style={{display: x.display ? \"block\" : \"none\"}}>\n                                            {i+1}. {y.definition}\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Display","import './App.css';\nimport Search from './components/Search'\nimport Display from './components/Display'\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [wordList, setWordList] = useState([]);\n  const [showFirstDefinition, setShowFirstDefinition] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <span style={{alignSelf:'center', fontSize: '24px'}}>\n          Anagram Finder\n        </span>\n      </div>\n      <div className=\"search_container\">\n        <Search \n          wordList={wordList} setWordList={setWordList} \n          setShowFirstDefinition={setShowFirstDefinition}\n        />\n      </div>\n      <div className=\"display_container\">\n        <Display wordList={wordList} showFirstDefinition={showFirstDefinition}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}